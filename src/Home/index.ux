<template>
    <div class="container">
        <list>
            <list-item for="repoList" class="list-item" type="repo" @click="openRepo($item.name)">
                <text>{{$item.name}}</text>
                <text>{{$item.desc}}</text>
            </list-item>
        </list>
    </div>
</template>

<style>
    .container {
        flex-direction: column;
        justify-content: center;
        align-content: center;
        align-items: center;
    }

    .list-item {
        padding: 16px;
        /* height: 100px */
        flex-direction: column;
    }
</style>

<script>
    import { fetch } from '@system.fetch'
    import { Parser } from 'htmlparser2'

    var $
    const parser = new Parser({
        items: [],
        listStart: false,
        nameStart: false,
        descStart: false,
        onopentag(name, attributes) {
            if (name == "ol" && attributes.class == "repo-list") {
                this.listStart = true
            } else if (this.listStart) {
                if (name == "li" && attributes.class == "col-12 d-block width-full py-4 border-bottom") {
                    this.items.push({ name: "", desc: "" })
                } else if (name == "h3") {
                    this.nameStart = true
                } else if (name == "a" && this.nameStart) {
                    this.items[this.items.length - 1].name = attributes.href
                } else if (name == "p" && attributes.class == "col-9 d-inline-block text-gray m-0 pr-4") {
                    this.descStart = true
                }
            }
        },
        ontext(text) {
            if (this.descStart) {
                this.items[this.items.length - 1].desc += text.trim()
            }
        },
        onclosetag(name) {
            if (name == "ol") {
                this.listStart = false
            } else if (name == "h3") {
                this.nameStart = false
            } else if (name == "p") {
                this.descStart = false
            }
        },
        onend() {
            $.repoList = this.items
        }
    })

    module.exports = {
        data: {
            repoList: []
        },
        onInit() {
            $ = this
            $.$page.setTitleBar({
                text: 'GithubTrending',
                textColor: '#ffffff',
            })
            $.fetchTrending()
        },
        fetchTrending() {
            var startTime = new Date().getTime()
            fetch({
                url: "https://github.com/trending",
                success(response) {
                    var currentTime = new Date().getTime()
                    console.log(`download time: ${currentTime - startTime}ms`)
                    startTime = currentTime

                    parser.write(response.data)
                    parser.end()

                    currentTime = new Date().getTime()
                    console.log(`parse time: ${currentTime - startTime}ms`)
                },
                fail(err, code) {
                }
            })
        },
        openRepo(name) {
            console.log(name);
        }
    }
</script>